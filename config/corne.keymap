/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 *
 * ==================================================================
 * CORNE KEYBOARD CONFIGURATION FILE
 * ==================================================================
 * This file contains all keymap definitions, behaviors, and custom
 * configurations for the Corne split keyboard.
 * 
 * Keymap structure:
 * - Behaviors section: Defines all key behaviors (hold-tap, home row mods, etc.)
 * - Combos section: Defines key combinations that trigger specific actions
 * - Keymap section: Defines all layers and their key bindings
 * ==================================================================
 */
/* 
 * INCLUDE NECESSARY HEADER FILES
 * These provide definitions for various key codes and behaviors
 */

#include <dt-bindings/zmk/mouse.h>       // Mouse button definitions
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/* 
 * LAYER DEFINITIONS
 * These define the layer indices for easier reference throughout the keymap
 */

#define NAV_LAYER 1      // Navigation controls, arrows, media, etc.
#define SYM_LAYER 2      // Symbols, special characters
#define SYSTEM_LAYER 3   // System functions, bluetooth, etc.
#define MOUSE_LAYER 4    // Mouse movement and control

/ {
    /* 
     * BEHAVIOR DEFINITIONS
     * These define how special key behaviors function
     */

    behaviors {
        /* 
         * HOLD-TAP BEHAVIOR
         * Used for thumb keys to perform different actions when held vs tapped
         * - When tapping the key: Sends the tap binding (e.g., Enter)
         * - When holding the key: Activates the hold binding (e.g., GUI modifier)
         */

        ht: holdtap {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_HOLD_TAPS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "balanced";
            global-quick-tap;
            quick-tap-ms = <0>;
            bindings = <&kp>, <&kp>;
        };

        /* 
         * HOME ROW MODS - LEFT HAND
         * Allows home row keys to act as modifiers when held
         * - When tapped normally: Types the character (e.g., 'a', 's', etc.)
         * - When held: Acts as a modifier (CTRL, ALT, GUI, SHIFT)
         * - Tuned for the left hand with specific trigger positions
         */

        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            global-quick-tap;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 41 40>;
            require-prior-idle-ms = <75>;
        };

        /* 
         * HOME ROW MODS - RIGHT HAND
         * Same concept as left home row mods but tuned for right hand
         * - When tapped normally: Types the character (e.g., 'j', 'k', etc.)
         * - When held: Acts as a modifier (SHIFT, CTRL, ALT, GUI)
         * - Tuned for the right hand with specific trigger positions
         */

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            global-quick-tap;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            hold-trigger-on-release;
            require-prior-idle-ms = <75>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 36 37 38>;
        };

        /* 
         * SMART SHIFT BEHAVIOR
         * Enhances the shift key with multiple functions:
         * - When tapped: Acts as sticky shift (stays active for next keypress)
         * - When shift+tapped or double-tapped: Activates caps-word (stays in caps until space/non-alpha)
         * - When held: Regular shift behavior
         */

        smart_shft: smart_shft {
            compatible = "zmk,behavior-mod-morph";
            label = "SMART_SHIFT";
            #binding-cells = <0>;
            bindings = <&sk LSHFT>, <&caps_word>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        /* 
         * GLOBAL QUICK TAP BEHAVIOR
         * Improves responsiveness when typing quickly
         * - Makes tap behavior more likely after a recent tap
         * - Helps prevent accidental activations of hold behavior during fast typing
         */

        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        /* 
         * ALT + CAPS LOCK COMBO BEHAVIOR
         * Multipurpose behavior for the Alt key:
         * - When tapped or held: Functions as Left Alt
         * - When double-tapped: Toggles Caps Lock
         */

        alt_caps: alt_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "ALT_CAPS";
            #binding-cells = <0>;
            tapping-term-ms = <50>;
            bindings = <&kp LALT>, <&kp CAPS>;
        };
    };

    /* 
     * KEY COMBOS
     * Define combinations of keys that trigger special actions
     */

    combos {
        compatible = "zmk,combos";

        /* 
         * MOUSE LAYER TOGGLE
         * Press LEFT_TAB and BACKSPACE simultaneously to toggle the mouse layer
         * This allows easy access to mouse controls without dedicated keys
         */

        toggle_mouse_layer {
            bindings = <&tog 4>;
            key-positions = <37 40>; // LEFT_TAB and BACKSPACE keys
            layers = <0>; // Only active on default layer
        };
    };

    keymap {
        compatible = "zmk,keymap";

        /*
         * DEFAULT LAYER
         * 
         * ,-------------------------------------------.                              ,-------------------------------------------.
         * | UP    |  Q  |  W  |  E  |  R  |  T  |                                |  Y  |  U   |  I  |  O  |  P  | UP   |
         * |-------+-----+-----+-----+-----+-----|                                |-----+------+-----+-----+-----+------|
         * | LEFT  |  A  |  S  |  D  |  F  |  G  |                                |  H  |  J   |  K  |  L  |  ;  | RIGHT|
         * |-------+-----+-----+-----+-----+-----|                                |-----+------+-----+-----+-----+------|
         * | DOWN  |  Z  |  X  |  C  |  V  |  B  |                                |  N  |  M   |  ,  |  .  |  /  | DOWN |
         * `----------------------+-----+-----+-----|                          |-----+------+----------------------'
         *                        | ESC | TAB | ENT |                          | SPC | BKSP | DEL |
         *                        `-----+-----+-----'                          `-----+------+-----'
         */

        default_layer {
            bindings = <
&kp UP    &kp Q        &kp W            &kp E          &kp R              &kp T                 &kp Y        &kp U               &kp I         &kp O    &kp P     &kp UP
&kp LEFT  &hml LGUI A  &hml LEFT_ALT S  &hml LCTRL D   &hml LEFT_SHIFT F  &kp G                 &kp H        &hmr RIGHT_SHIFT J  &hmr RCTRL K  &kp L    &kp SEMI  &kp RIGHT
&kp DOWN  &kp Z        &kp X            &kp C          &kp V              &kp B                 &kp N        &kp M               &kp COMMA     &kp DOT  &kp FSLH  &kp DOWN
                                        &ht LCTRL ESC  &ht LEFT_ALT TAB   &ht LEFT_GUI ENTER    &lt 2 SPACE  &lt 1 BACKSPACE     &lt 3 DEL
            >;
        };

        /*
         * NUMBER LAYER
         *
         * ,-------------------------------------------.                              ,-------------------------------------------.
         * |      |  /  |  7  |  8  |  9  |  .  |                                | BT2 |  F7  |  F8 |  F9 | F12 |BT CLR|
         * |-------+-----+-----+-----+-----+-----|                                |-----+------+-----+-----+-----+------|
         * |      |  *  |  4  |  5  |  6  |  +  |                                | BT1 |  F4  |  F5 |  F6 | F11 | BT4  |
         * |-------+-----+-----+-----+-----+-----|                                |-----+------+-----+-----+-----+------|
         * |      |  0  |  1  |  2  |  3  |  -  |                                | BT0 |  F1  |  F2 |  F3 | F10 | BT3  |
         * `----------------------+-----+-----+-----|                          |-----+------+----------------------'
         *                        |     |     |     |                          |     |  DEL |     |
         *                        `-----+-----+-----'                          `-----+------+-----'
         */

        number_layer {
            bindings = <
&trans  &kp FSLH        &kp N7        &kp N8         &kp N9         &kp DOT      &bt BT_SEL 2  &kp F7         &kp F8         &kp F9        &kp F12        &bt BT_CLR
&trans  &hml LGUI STAR  &hml LALT N4  &hml LCTRL N5  &hml LSHFT N6  &kp PLUS     &bt BT_SEL 1  &hmr LSHFT F4  &hmr LCTRL F5  &hmr LALT F6  &hmr LGUI F11  &bt BT_SEL 4
&trans  &kp N0          &kp N1        &kp N2         &kp N3         &kp MINUS    &bt BT_SEL 0  &kp F1         &kp F2         &kp F3        &kp F10        &bt BT_SEL 3
                                      &trans         &trans         &trans       &trans        &lt 2 DEL      &trans
            >;
        };

        /*
         * SYMBOL LAYER
         *
         * ,-------------------------------------------.                              ,-------------------------------------------.
         * |      |  !  |  @  |  #  |  $  |  %  |                                |  ^  |  &   |  *  |  =  |  -  | PRSCR|
         * |-------+-----+-----+-----+-----+-----|                                |-----+------+-----+-----+-----+------|
         * |      |  ~  |  [  |  {  |  (  |  /  |                                |  \  |  )   |  }  |  ]  |  _  |      |
         * |-------+-----+-----+-----+-----+-----|                                |-----+------+-----+-----+-----+------|
         * |      |     |  -  |  =  |  `  |  '  |                                |  "  |  -   |  +  |  =  |  |  |      |
         * `----------------------+-----+-----+-----|                          |-----+------+----------------------'
         *                        |     |     |     |                          |     |      |     |
         *                        `-----+-----+-----'                          `-----+------+-----'
         */

        symbol_layer {
            bindings = <
&trans  &kp EXCL         &kp AT          &kp HASH         &kp DOLLAR       &kp PRCNT    &kp CARET  &kp AMPS         &kp STAR         &kp EQUAL       &kp MINUS        &kp PRINTSCREEN
&trans  &hml LGUI TILDE  &hml LALT LBKT  &hml LCTRL LBRC  &hml LSHFT LPAR  &kp FSLH     &kp BSLH   &hmr LSHFT RPAR  &hmr LCTRL RBRC  &hmr LALT RBKT  &hmr LGUI UNDER  &trans
&trans  &trans           &kp MINUS       &kp EQUAL        &kp GRAVE        &kp SQT      &kp DQT    &kp MINUS        &kp PLUS         &kp EQUAL       &kp PIPE         &trans
                                         &trans           &trans           &trans       &trans     &trans           &trans
            >;
        };

        /*
         * NAVIGATION LAYER
         *
         * ,-------------------------------------------.                              ,-------------------------------------------.
         * |      | PREV|L→TAB| P/P |NEXT |     |                                |     |      | PGU | PGD |     | DEL  |
         * |-------+-----+-----+-----+-----+-----|                                |-----+------+-----+-----+-----+------|
         * |      |HOME |PGDN |PGUP |END  |     |                                | ←   |  ↓   |  ↑  |  →  | GUI |      |
         * |-------+-----+-----+-----+-----+-----|                                |-----+------+-----+-----+-----+------|
         * |      |     |     |     |     |L←TAB|                                |BRI- |VOL-  |VOL+ |BRI+ |     |      |
         * `----------------------+-----+-----+-----|                          |-----+------+----------------------'
         *                        |     |     |     |                          |     |      |     |
         *                        `-----+-----+-----'                          `-----+------+-----'
         */

        navigation_layer {
            bindings = <
&trans  &kp C_PREV      &kp LC(RIGHT)    &kp C_PP          &kp C_NEXT      &trans          &trans         &trans           &kp LC(PG_UP)  &kp LC(PG_DN)    &trans    &kp DEL
&trans  &hml LGUI HOME  &hml LALT PG_DN  &hml LCTRL PG_UP  &hml LSHFT END  &trans          &kp LEFT       &hmr LSHFT DOWN  &hmr LCTRL UP  &hmr LALT RIGHT  &kp LGUI  &trans
&trans  &trans          &trans           &trans            &trans          &kp LC(LEFT)    &kp C_BRI_DEC  &kp C_VOL_DN     &kp C_VOL_UP   &kp C_BRI_INC    &trans    &trans
                                         &trans            &trans          &trans          &trans         &trans           &trans
            >;
        };

        /*
         * MOUSE LAYER
         *
         * ,-------------------------------------------.                              ,-------------------------------------------.
         * |      |     |     | MB4 | MB5 |     |                                |WHL← |WHL↓  |WHL↑ |WHL→ |     |      |
         * |-------+-----+-----+-----+-----+-----|                                |-----+------+-----+-----+-----+------|
         * |      |     |     |     |     |     |                                |MS ← |MS ↓  |MS ↑ |MS → |     |      |
         * |-------+-----+-----+-----+-----+-----|                                |-----+------+-----+-----+-----+------|
         * |      |     |     |     |     |     |                                |     |LSHFT |RCTRL|LALT |LGUI |      |
         * `----------------------+-----+-----+-----|                          |-----+------+----------------------'
         *                        |     | MB1 | MB3 |                          | MB2 |      |     |
         *                        `-----+-----+-----'                          `-----+------+-----'
         */

        mouse {
            bindings = <
&trans  &trans  &trans  &mkp MB4  &mkp MB5  &trans      &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans    &trans
&trans  &trans  &trans  &trans    &trans    &trans      &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans    &trans
&trans  &trans  &trans  &trans    &trans    &trans      &trans          &sk LSFT        &sk RCTL      &sk LALT         &sk LGUI  &trans
                        &trans    &mkp MB1  &mkp MB3    &mkp MB2        &trans          &trans
            >;
        };
    };
};
